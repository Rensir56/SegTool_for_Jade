worker_processes auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    client_max_body_size 100M;  # 设置全局文件大小限制
    sendfile        on;
    keepalive_timeout  65;
    charset utf-8;

    # 日志格式（可选，用于调试）
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen       0.0.0.0:80;
        server_name  10.22.125.155;

        # 1. Vue 前端静态文件托管
        location / {
            root   C:/Users/Lenovo/Desktop/SegTool_for_Jade/front/dist;
            try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }

        # 2. Go 后端代理
        location /api/go/ {
            proxy_pass http://localhost:3001/;
            rewrite ^/api/go/(.*)$ /$1 break;   # 移除 '/api/go/' 前缀
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS for Go
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                return 204;
            }
        }

        # 3. FastAPI 后端代理
        location /api/fastapi/ {
            proxy_pass http://localhost:8006/;
            rewrite ^/api/fastapi/(.*)$ /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS for FastAPI
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                return 204;
            }
        }

        # 代理Flask图片路径
        location /image/ {
            proxy_pass http://localhost:8005/image/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 4. Flask 后端代理
        location /api/flask/ {
            proxy_pass http://localhost:8005/;
            rewrite ^/api/flask/(.*)$ /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS for Flask
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                return 204;
            }
        }

        # Custom error page
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
